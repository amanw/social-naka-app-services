// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/amanw/social-naka-app-services/pkg/api/models"
)

// UpdateEventbyIDOKCode is the HTTP code returned for type UpdateEventbyIDOK
const UpdateEventbyIDOKCode int = 200

/*UpdateEventbyIDOK OK

swagger:response updateEventbyIdOK
*/
type UpdateEventbyIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventResponse `json:"body,omitempty"`
}

// NewUpdateEventbyIDOK creates UpdateEventbyIDOK with default headers values
func NewUpdateEventbyIDOK() *UpdateEventbyIDOK {

	return &UpdateEventbyIDOK{}
}

// WithPayload adds the payload to the update eventby Id o k response
func (o *UpdateEventbyIDOK) WithPayload(payload *models.EventResponse) *UpdateEventbyIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update eventby Id o k response
func (o *UpdateEventbyIDOK) SetPayload(payload *models.EventResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventbyIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventbyIDBadRequestCode is the HTTP code returned for type UpdateEventbyIDBadRequest
const UpdateEventbyIDBadRequestCode int = 400

/*UpdateEventbyIDBadRequest The api is Unauthorized

swagger:response updateEventbyIdBadRequest
*/
type UpdateEventbyIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateEventbyIDBadRequest creates UpdateEventbyIDBadRequest with default headers values
func NewUpdateEventbyIDBadRequest() *UpdateEventbyIDBadRequest {

	return &UpdateEventbyIDBadRequest{}
}

// WithPayload adds the payload to the update eventby Id bad request response
func (o *UpdateEventbyIDBadRequest) WithPayload(payload *models.Response) *UpdateEventbyIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update eventby Id bad request response
func (o *UpdateEventbyIDBadRequest) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventbyIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventbyIDUnauthorizedCode is the HTTP code returned for type UpdateEventbyIDUnauthorized
const UpdateEventbyIDUnauthorizedCode int = 401

/*UpdateEventbyIDUnauthorized The api is Unauthorized

swagger:response updateEventbyIdUnauthorized
*/
type UpdateEventbyIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateEventbyIDUnauthorized creates UpdateEventbyIDUnauthorized with default headers values
func NewUpdateEventbyIDUnauthorized() *UpdateEventbyIDUnauthorized {

	return &UpdateEventbyIDUnauthorized{}
}

// WithPayload adds the payload to the update eventby Id unauthorized response
func (o *UpdateEventbyIDUnauthorized) WithPayload(payload *models.Response) *UpdateEventbyIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update eventby Id unauthorized response
func (o *UpdateEventbyIDUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventbyIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventbyIDNotFoundCode is the HTTP code returned for type UpdateEventbyIDNotFound
const UpdateEventbyIDNotFoundCode int = 404

/*UpdateEventbyIDNotFound The api is not found

swagger:response updateEventbyIdNotFound
*/
type UpdateEventbyIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateEventbyIDNotFound creates UpdateEventbyIDNotFound with default headers values
func NewUpdateEventbyIDNotFound() *UpdateEventbyIDNotFound {

	return &UpdateEventbyIDNotFound{}
}

// WithPayload adds the payload to the update eventby Id not found response
func (o *UpdateEventbyIDNotFound) WithPayload(payload *models.Response) *UpdateEventbyIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update eventby Id not found response
func (o *UpdateEventbyIDNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventbyIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventbyIDInternalServerErrorCode is the HTTP code returned for type UpdateEventbyIDInternalServerError
const UpdateEventbyIDInternalServerErrorCode int = 500

/*UpdateEventbyIDInternalServerError Internal Server Error

swagger:response updateEventbyIdInternalServerError
*/
type UpdateEventbyIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateEventbyIDInternalServerError creates UpdateEventbyIDInternalServerError with default headers values
func NewUpdateEventbyIDInternalServerError() *UpdateEventbyIDInternalServerError {

	return &UpdateEventbyIDInternalServerError{}
}

// WithPayload adds the payload to the update eventby Id internal server error response
func (o *UpdateEventbyIDInternalServerError) WithPayload(payload *models.Response) *UpdateEventbyIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update eventby Id internal server error response
func (o *UpdateEventbyIDInternalServerError) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventbyIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
