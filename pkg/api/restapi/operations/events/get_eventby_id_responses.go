// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/amanw/social-naka-app-services/pkg/api/models"
)

// GetEventbyIDOKCode is the HTTP code returned for type GetEventbyIDOK
const GetEventbyIDOKCode int = 200

/*GetEventbyIDOK OK

swagger:response getEventbyIdOK
*/
type GetEventbyIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventResponse `json:"body,omitempty"`
}

// NewGetEventbyIDOK creates GetEventbyIDOK with default headers values
func NewGetEventbyIDOK() *GetEventbyIDOK {

	return &GetEventbyIDOK{}
}

// WithPayload adds the payload to the get eventby Id o k response
func (o *GetEventbyIDOK) WithPayload(payload *models.EventResponse) *GetEventbyIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get eventby Id o k response
func (o *GetEventbyIDOK) SetPayload(payload *models.EventResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventbyIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventbyIDBadRequestCode is the HTTP code returned for type GetEventbyIDBadRequest
const GetEventbyIDBadRequestCode int = 400

/*GetEventbyIDBadRequest The api is Unauthorized

swagger:response getEventbyIdBadRequest
*/
type GetEventbyIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewGetEventbyIDBadRequest creates GetEventbyIDBadRequest with default headers values
func NewGetEventbyIDBadRequest() *GetEventbyIDBadRequest {

	return &GetEventbyIDBadRequest{}
}

// WithPayload adds the payload to the get eventby Id bad request response
func (o *GetEventbyIDBadRequest) WithPayload(payload *models.Response) *GetEventbyIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get eventby Id bad request response
func (o *GetEventbyIDBadRequest) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventbyIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventbyIDUnauthorizedCode is the HTTP code returned for type GetEventbyIDUnauthorized
const GetEventbyIDUnauthorizedCode int = 401

/*GetEventbyIDUnauthorized The api is Unauthorized

swagger:response getEventbyIdUnauthorized
*/
type GetEventbyIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewGetEventbyIDUnauthorized creates GetEventbyIDUnauthorized with default headers values
func NewGetEventbyIDUnauthorized() *GetEventbyIDUnauthorized {

	return &GetEventbyIDUnauthorized{}
}

// WithPayload adds the payload to the get eventby Id unauthorized response
func (o *GetEventbyIDUnauthorized) WithPayload(payload *models.Response) *GetEventbyIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get eventby Id unauthorized response
func (o *GetEventbyIDUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventbyIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventbyIDNotFoundCode is the HTTP code returned for type GetEventbyIDNotFound
const GetEventbyIDNotFoundCode int = 404

/*GetEventbyIDNotFound The api is not found

swagger:response getEventbyIdNotFound
*/
type GetEventbyIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewGetEventbyIDNotFound creates GetEventbyIDNotFound with default headers values
func NewGetEventbyIDNotFound() *GetEventbyIDNotFound {

	return &GetEventbyIDNotFound{}
}

// WithPayload adds the payload to the get eventby Id not found response
func (o *GetEventbyIDNotFound) WithPayload(payload *models.Response) *GetEventbyIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get eventby Id not found response
func (o *GetEventbyIDNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventbyIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventbyIDInternalServerErrorCode is the HTTP code returned for type GetEventbyIDInternalServerError
const GetEventbyIDInternalServerErrorCode int = 500

/*GetEventbyIDInternalServerError Internal Server Error

swagger:response getEventbyIdInternalServerError
*/
type GetEventbyIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewGetEventbyIDInternalServerError creates GetEventbyIDInternalServerError with default headers values
func NewGetEventbyIDInternalServerError() *GetEventbyIDInternalServerError {

	return &GetEventbyIDInternalServerError{}
}

// WithPayload adds the payload to the get eventby Id internal server error response
func (o *GetEventbyIDInternalServerError) WithPayload(payload *models.Response) *GetEventbyIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get eventby Id internal server error response
func (o *GetEventbyIDInternalServerError) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventbyIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
