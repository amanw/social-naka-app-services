// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateEventbyIDHandlerFunc turns a function with the right signature into a update eventby ID handler
type UpdateEventbyIDHandlerFunc func(UpdateEventbyIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateEventbyIDHandlerFunc) Handle(params UpdateEventbyIDParams) middleware.Responder {
	return fn(params)
}

// UpdateEventbyIDHandler interface for that can handle valid update eventby ID params
type UpdateEventbyIDHandler interface {
	Handle(UpdateEventbyIDParams) middleware.Responder
}

// NewUpdateEventbyID creates a new http.Handler for the update eventby ID operation
func NewUpdateEventbyID(ctx *middleware.Context, handler UpdateEventbyIDHandler) *UpdateEventbyID {
	return &UpdateEventbyID{Context: ctx, Handler: handler}
}

/*UpdateEventbyID swagger:route PATCH /events/{id} events updateEventbyId

Updates an event by ID.

It updates the user information details by ID


*/
type UpdateEventbyID struct {
	Context *middleware.Context
	Handler UpdateEventbyIDHandler
}

func (o *UpdateEventbyID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateEventbyIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
