// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/amanw/social-naka-app-services/pkg/api/models"
)

// PostEventOKCode is the HTTP code returned for type PostEventOK
const PostEventOKCode int = 200

/*PostEventOK OK

swagger:response postEventOK
*/
type PostEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventResponse `json:"body,omitempty"`
}

// NewPostEventOK creates PostEventOK with default headers values
func NewPostEventOK() *PostEventOK {

	return &PostEventOK{}
}

// WithPayload adds the payload to the post event o k response
func (o *PostEventOK) WithPayload(payload *models.EventResponse) *PostEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post event o k response
func (o *PostEventOK) SetPayload(payload *models.EventResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEventBadRequestCode is the HTTP code returned for type PostEventBadRequest
const PostEventBadRequestCode int = 400

/*PostEventBadRequest The api is Unauthorized

swagger:response postEventBadRequest
*/
type PostEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostEventBadRequest creates PostEventBadRequest with default headers values
func NewPostEventBadRequest() *PostEventBadRequest {

	return &PostEventBadRequest{}
}

// WithPayload adds the payload to the post event bad request response
func (o *PostEventBadRequest) WithPayload(payload *models.Response) *PostEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post event bad request response
func (o *PostEventBadRequest) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEventUnauthorizedCode is the HTTP code returned for type PostEventUnauthorized
const PostEventUnauthorizedCode int = 401

/*PostEventUnauthorized The api is Unauthorized

swagger:response postEventUnauthorized
*/
type PostEventUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostEventUnauthorized creates PostEventUnauthorized with default headers values
func NewPostEventUnauthorized() *PostEventUnauthorized {

	return &PostEventUnauthorized{}
}

// WithPayload adds the payload to the post event unauthorized response
func (o *PostEventUnauthorized) WithPayload(payload *models.Response) *PostEventUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post event unauthorized response
func (o *PostEventUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEventNotFoundCode is the HTTP code returned for type PostEventNotFound
const PostEventNotFoundCode int = 404

/*PostEventNotFound The api is not found

swagger:response postEventNotFound
*/
type PostEventNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostEventNotFound creates PostEventNotFound with default headers values
func NewPostEventNotFound() *PostEventNotFound {

	return &PostEventNotFound{}
}

// WithPayload adds the payload to the post event not found response
func (o *PostEventNotFound) WithPayload(payload *models.Response) *PostEventNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post event not found response
func (o *PostEventNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEventInternalServerErrorCode is the HTTP code returned for type PostEventInternalServerError
const PostEventInternalServerErrorCode int = 500

/*PostEventInternalServerError Internal Server Error

swagger:response postEventInternalServerError
*/
type PostEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostEventInternalServerError creates PostEventInternalServerError with default headers values
func NewPostEventInternalServerError() *PostEventInternalServerError {

	return &PostEventInternalServerError{}
}

// WithPayload adds the payload to the post event internal server error response
func (o *PostEventInternalServerError) WithPayload(payload *models.Response) *PostEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post event internal server error response
func (o *PostEventInternalServerError) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
