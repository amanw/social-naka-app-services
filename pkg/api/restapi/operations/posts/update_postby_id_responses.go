// Code generated by go-swagger; DO NOT EDIT.

package posts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/amanw/social-naka-app-services/pkg/api/models"
)

// UpdatePostbyIDOKCode is the HTTP code returned for type UpdatePostbyIDOK
const UpdatePostbyIDOKCode int = 200

/*UpdatePostbyIDOK OK

swagger:response updatePostbyIdOK
*/
type UpdatePostbyIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostResponse `json:"body,omitempty"`
}

// NewUpdatePostbyIDOK creates UpdatePostbyIDOK with default headers values
func NewUpdatePostbyIDOK() *UpdatePostbyIDOK {

	return &UpdatePostbyIDOK{}
}

// WithPayload adds the payload to the update postby Id o k response
func (o *UpdatePostbyIDOK) WithPayload(payload *models.PostResponse) *UpdatePostbyIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update postby Id o k response
func (o *UpdatePostbyIDOK) SetPayload(payload *models.PostResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePostbyIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePostbyIDBadRequestCode is the HTTP code returned for type UpdatePostbyIDBadRequest
const UpdatePostbyIDBadRequestCode int = 400

/*UpdatePostbyIDBadRequest The api is Unauthorized

swagger:response updatePostbyIdBadRequest
*/
type UpdatePostbyIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdatePostbyIDBadRequest creates UpdatePostbyIDBadRequest with default headers values
func NewUpdatePostbyIDBadRequest() *UpdatePostbyIDBadRequest {

	return &UpdatePostbyIDBadRequest{}
}

// WithPayload adds the payload to the update postby Id bad request response
func (o *UpdatePostbyIDBadRequest) WithPayload(payload *models.Response) *UpdatePostbyIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update postby Id bad request response
func (o *UpdatePostbyIDBadRequest) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePostbyIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePostbyIDUnauthorizedCode is the HTTP code returned for type UpdatePostbyIDUnauthorized
const UpdatePostbyIDUnauthorizedCode int = 401

/*UpdatePostbyIDUnauthorized The api is Unauthorized

swagger:response updatePostbyIdUnauthorized
*/
type UpdatePostbyIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdatePostbyIDUnauthorized creates UpdatePostbyIDUnauthorized with default headers values
func NewUpdatePostbyIDUnauthorized() *UpdatePostbyIDUnauthorized {

	return &UpdatePostbyIDUnauthorized{}
}

// WithPayload adds the payload to the update postby Id unauthorized response
func (o *UpdatePostbyIDUnauthorized) WithPayload(payload *models.Response) *UpdatePostbyIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update postby Id unauthorized response
func (o *UpdatePostbyIDUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePostbyIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePostbyIDNotFoundCode is the HTTP code returned for type UpdatePostbyIDNotFound
const UpdatePostbyIDNotFoundCode int = 404

/*UpdatePostbyIDNotFound The api is not found

swagger:response updatePostbyIdNotFound
*/
type UpdatePostbyIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdatePostbyIDNotFound creates UpdatePostbyIDNotFound with default headers values
func NewUpdatePostbyIDNotFound() *UpdatePostbyIDNotFound {

	return &UpdatePostbyIDNotFound{}
}

// WithPayload adds the payload to the update postby Id not found response
func (o *UpdatePostbyIDNotFound) WithPayload(payload *models.Response) *UpdatePostbyIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update postby Id not found response
func (o *UpdatePostbyIDNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePostbyIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePostbyIDInternalServerErrorCode is the HTTP code returned for type UpdatePostbyIDInternalServerError
const UpdatePostbyIDInternalServerErrorCode int = 500

/*UpdatePostbyIDInternalServerError Internal Server Error

swagger:response updatePostbyIdInternalServerError
*/
type UpdatePostbyIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdatePostbyIDInternalServerError creates UpdatePostbyIDInternalServerError with default headers values
func NewUpdatePostbyIDInternalServerError() *UpdatePostbyIDInternalServerError {

	return &UpdatePostbyIDInternalServerError{}
}

// WithPayload adds the payload to the update postby Id internal server error response
func (o *UpdatePostbyIDInternalServerError) WithPayload(payload *models.Response) *UpdatePostbyIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update postby Id internal server error response
func (o *UpdatePostbyIDInternalServerError) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePostbyIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
