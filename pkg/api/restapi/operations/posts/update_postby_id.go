// Code generated by go-swagger; DO NOT EDIT.

package posts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdatePostbyIDHandlerFunc turns a function with the right signature into a update postby ID handler
type UpdatePostbyIDHandlerFunc func(UpdatePostbyIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdatePostbyIDHandlerFunc) Handle(params UpdatePostbyIDParams) middleware.Responder {
	return fn(params)
}

// UpdatePostbyIDHandler interface for that can handle valid update postby ID params
type UpdatePostbyIDHandler interface {
	Handle(UpdatePostbyIDParams) middleware.Responder
}

// NewUpdatePostbyID creates a new http.Handler for the update postby ID operation
func NewUpdatePostbyID(ctx *middleware.Context, handler UpdatePostbyIDHandler) *UpdatePostbyID {
	return &UpdatePostbyID{Context: ctx, Handler: handler}
}

/*UpdatePostbyID swagger:route PATCH /posts/{id} posts updatePostbyId

Updates an post by ID.

It updates the user information details by ID


*/
type UpdatePostbyID struct {
	Context *middleware.Context
	Handler UpdatePostbyIDHandler
}

func (o *UpdatePostbyID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdatePostbyIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
