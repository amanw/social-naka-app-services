// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteUserbyIDHandlerFunc turns a function with the right signature into a delete userby ID handler
type DeleteUserbyIDHandlerFunc func(DeleteUserbyIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteUserbyIDHandlerFunc) Handle(params DeleteUserbyIDParams) middleware.Responder {
	return fn(params)
}

// DeleteUserbyIDHandler interface for that can handle valid delete userby ID params
type DeleteUserbyIDHandler interface {
	Handle(DeleteUserbyIDParams) middleware.Responder
}

// NewDeleteUserbyID creates a new http.Handler for the delete userby ID operation
func NewDeleteUserbyID(ctx *middleware.Context, handler DeleteUserbyIDHandler) *DeleteUserbyID {
	return &DeleteUserbyID{Context: ctx, Handler: handler}
}

/*DeleteUserbyID swagger:route DELETE /users/{id} users deleteUserbyId

Deletes a user by ID.

It delets the user information details by ID


*/
type DeleteUserbyID struct {
	Context *middleware.Context
	Handler DeleteUserbyIDHandler
}

func (o *DeleteUserbyID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteUserbyIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
