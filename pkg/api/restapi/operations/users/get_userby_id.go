// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetUserbyIDHandlerFunc turns a function with the right signature into a get userby ID handler
type GetUserbyIDHandlerFunc func(GetUserbyIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUserbyIDHandlerFunc) Handle(params GetUserbyIDParams) middleware.Responder {
	return fn(params)
}

// GetUserbyIDHandler interface for that can handle valid get userby ID params
type GetUserbyIDHandler interface {
	Handle(GetUserbyIDParams) middleware.Responder
}

// NewGetUserbyID creates a new http.Handler for the get userby ID operation
func NewGetUserbyID(ctx *middleware.Context, handler GetUserbyIDHandler) *GetUserbyID {
	return &GetUserbyID{Context: ctx, Handler: handler}
}

/*GetUserbyID swagger:route GET /users/{id} users getUserbyId

Gets a user by ID.

It gets the user information details by ID


*/
type GetUserbyID struct {
	Context *middleware.Context
	Handler GetUserbyIDHandler
}

func (o *GetUserbyID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUserbyIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
