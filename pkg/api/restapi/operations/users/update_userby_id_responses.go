// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/amanw/social-naka-app-services/pkg/api/models"
)

// UpdateUserbyIDOKCode is the HTTP code returned for type UpdateUserbyIDOK
const UpdateUserbyIDOKCode int = 200

/*UpdateUserbyIDOK OK

swagger:response updateUserbyIdOK
*/
type UpdateUserbyIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.RegistrationResponse `json:"body,omitempty"`
}

// NewUpdateUserbyIDOK creates UpdateUserbyIDOK with default headers values
func NewUpdateUserbyIDOK() *UpdateUserbyIDOK {

	return &UpdateUserbyIDOK{}
}

// WithPayload adds the payload to the update userby Id o k response
func (o *UpdateUserbyIDOK) WithPayload(payload *models.RegistrationResponse) *UpdateUserbyIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update userby Id o k response
func (o *UpdateUserbyIDOK) SetPayload(payload *models.RegistrationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserbyIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserbyIDBadRequestCode is the HTTP code returned for type UpdateUserbyIDBadRequest
const UpdateUserbyIDBadRequestCode int = 400

/*UpdateUserbyIDBadRequest The api is Unauthorized

swagger:response updateUserbyIdBadRequest
*/
type UpdateUserbyIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateUserbyIDBadRequest creates UpdateUserbyIDBadRequest with default headers values
func NewUpdateUserbyIDBadRequest() *UpdateUserbyIDBadRequest {

	return &UpdateUserbyIDBadRequest{}
}

// WithPayload adds the payload to the update userby Id bad request response
func (o *UpdateUserbyIDBadRequest) WithPayload(payload *models.Response) *UpdateUserbyIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update userby Id bad request response
func (o *UpdateUserbyIDBadRequest) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserbyIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserbyIDUnauthorizedCode is the HTTP code returned for type UpdateUserbyIDUnauthorized
const UpdateUserbyIDUnauthorizedCode int = 401

/*UpdateUserbyIDUnauthorized The api is Unauthorized

swagger:response updateUserbyIdUnauthorized
*/
type UpdateUserbyIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateUserbyIDUnauthorized creates UpdateUserbyIDUnauthorized with default headers values
func NewUpdateUserbyIDUnauthorized() *UpdateUserbyIDUnauthorized {

	return &UpdateUserbyIDUnauthorized{}
}

// WithPayload adds the payload to the update userby Id unauthorized response
func (o *UpdateUserbyIDUnauthorized) WithPayload(payload *models.Response) *UpdateUserbyIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update userby Id unauthorized response
func (o *UpdateUserbyIDUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserbyIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserbyIDNotFoundCode is the HTTP code returned for type UpdateUserbyIDNotFound
const UpdateUserbyIDNotFoundCode int = 404

/*UpdateUserbyIDNotFound The api is not found

swagger:response updateUserbyIdNotFound
*/
type UpdateUserbyIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateUserbyIDNotFound creates UpdateUserbyIDNotFound with default headers values
func NewUpdateUserbyIDNotFound() *UpdateUserbyIDNotFound {

	return &UpdateUserbyIDNotFound{}
}

// WithPayload adds the payload to the update userby Id not found response
func (o *UpdateUserbyIDNotFound) WithPayload(payload *models.Response) *UpdateUserbyIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update userby Id not found response
func (o *UpdateUserbyIDNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserbyIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserbyIDConflictCode is the HTTP code returned for type UpdateUserbyIDConflict
const UpdateUserbyIDConflictCode int = 409

/*UpdateUserbyIDConflict The user already exists

swagger:response updateUserbyIdConflict
*/
type UpdateUserbyIDConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateUserbyIDConflict creates UpdateUserbyIDConflict with default headers values
func NewUpdateUserbyIDConflict() *UpdateUserbyIDConflict {

	return &UpdateUserbyIDConflict{}
}

// WithPayload adds the payload to the update userby Id conflict response
func (o *UpdateUserbyIDConflict) WithPayload(payload *models.Response) *UpdateUserbyIDConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update userby Id conflict response
func (o *UpdateUserbyIDConflict) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserbyIDConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserbyIDInternalServerErrorCode is the HTTP code returned for type UpdateUserbyIDInternalServerError
const UpdateUserbyIDInternalServerErrorCode int = 500

/*UpdateUserbyIDInternalServerError Internal Server Error

swagger:response updateUserbyIdInternalServerError
*/
type UpdateUserbyIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewUpdateUserbyIDInternalServerError creates UpdateUserbyIDInternalServerError with default headers values
func NewUpdateUserbyIDInternalServerError() *UpdateUserbyIDInternalServerError {

	return &UpdateUserbyIDInternalServerError{}
}

// WithPayload adds the payload to the update userby Id internal server error response
func (o *UpdateUserbyIDInternalServerError) WithPayload(payload *models.Response) *UpdateUserbyIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update userby Id internal server error response
func (o *UpdateUserbyIDInternalServerError) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserbyIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
