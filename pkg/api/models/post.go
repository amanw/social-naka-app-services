// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Post post
//
// swagger:model post
type Post struct {

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is active
	IsActive bool `json:"is_active,omitempty"`

	// is verified
	IsVerified bool `json:"is_verified,omitempty"`

	// post date
	// Format: date
	PostDate *strfmt.Date `json:"post_date,omitempty"`

	// post description
	PostDescription string `json:"post_description,omitempty"`

	// post img url
	PostImgURL string `json:"post_img_url,omitempty"`

	// post video url
	PostVideoURL string `json:"post_video_url,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this post
func (m *Post) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePostDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Post) validatePostDate(formats strfmt.Registry) error {

	if swag.IsZero(m.PostDate) { // not required
		return nil
	}

	if err := validate.FormatOf("post_date", "body", "date", m.PostDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Post) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Post) UnmarshalBinary(b []byte) error {
	var res Post
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
